{
  "version": 3,
  "sources": ["../src/ImageOutput.tsx"],
  "sourcesContent": ["import React, { useRef, useEffect, useState } from \"react\";\nimport { useShinyInput, useShinyOutput } from \"./use-shiny\";\nimport { debounce } from \"./utils\";\n\nexport type ImageData = {\n  src: string;\n  width: number;\n  height: number;\n  coordmap: {\n    panels: {\n      panel: number;\n      row: number;\n      col: number;\n      domain: {\n        left: number;\n        right: number;\n        bottom: number;\n        top: number;\n      };\n      range: {\n        left: number;\n        right: number;\n        bottom: number;\n        top: number;\n      };\n      log: {\n        x: string | null;\n        y: string | null;\n      };\n      mapping: {\n        x: string | null;\n        y: string | null;\n      };\n    }[];\n    dims: {\n      width: number;\n      height: number;\n    };\n  };\n};\n\nexport function ImageOutput({\n  id,\n  className,\n}: {\n  id: string;\n  className?: string;\n}) {\n  const [imgWidth, setImgWidth] = useShinyInput<number | null>(\n    \".clientdata_output_\" + id + \"_width\",\n    null\n  );\n  const [imgHeight, setImgHeight] = useShinyInput<number | null>(\n    \".clientdata_output_\" + id + \"_height\",\n    null\n  );\n\n  // Track if the image is hidden\n  const [imgHidden] = useShinyInput<boolean>(\n    \".clientdata_output_\" + id + \"_hidden\",\n    false\n  );\n  const [imgData, imgRecalculating] = useShinyOutput<ImageData>(id, undefined);\n\n  // Create a reference to the img element to access its properties\n  const imgRef = useRef<HTMLImageElement>(null);\n\n  // Track when the image data changes\n  const [imageVersion, setImageVersion] = useState(0);\n\n  // Update the version when imgData changes\n  useEffect(() => {\n    if (imgData) {\n      setImageVersion((prev) => prev + 1);\n    }\n  }, [imgData]);\n\n  // Handle image load and dimension changes\n  const handleImageLoad = () => {\n    if (imgRef.current) {\n      const width = imgRef.current.clientWidth;\n      const height = imgRef.current.clientHeight;\n      console.log(\"Image loaded - Width:\", width, \"Height:\", height);\n      setImgWidth(width);\n      setImgHeight(height);\n    }\n  };\n\n  // Set up a mutation observer to detect image dimension changes\n  useEffect(() => {\n    console.log(\"Image dimensions changed\");\n    const img = imgRef.current;\n    if (!img) return;\n\n    // Set initial dimensions when the image first loads\n    img.addEventListener(\"load\", handleImageLoad);\n\n    // Create a debounced version of handleImageLoad with 200ms delay\n    const debouncedHandleResize = debounce(() => {\n      if (img && img.complete) {\n        handleImageLoad();\n      }\n    }, 400);\n\n    // Create a ResizeObserver to detect size changes\n    const resizeObserver = new ResizeObserver((entries) => {\n      for (const entry of entries) {\n        if (entry.target === img) {\n          debouncedHandleResize();\n        }\n      }\n    });\n\n    resizeObserver.observe(img);\n\n    return () => {\n      img.removeEventListener(\"load\", handleImageLoad);\n      resizeObserver.disconnect();\n    };\n  }, [imgRef, imageVersion, setImgWidth, setImgHeight]);\n\n  return (\n    <img\n      ref={imgRef}\n      src={imgData?.src}\n      alt=\"\"\n      className={className}\n      style={{\n        width: \"100%\",\n        height: \"300px\",\n        display: imgHidden ? \"none\" : \"block\",\n        opacity: imgRecalculating ? 0.4 : 1,\n      }}\n      onLoad={handleImageLoad}\n    />\n  );\n}\n"],
  "mappings": "AA0HI;AA1HJ,SAAgB,QAAQ,WAAW,gBAAgB;AACnD,SAAS,eAAe,sBAAsB;AAC9C,SAAS,gBAAgB;AAuClB,SAAS,YAAY;AAAA,EAC1B;AAAA,EACA;AACF,GAGG;AACD,QAAM,CAAC,UAAU,WAAW,IAAI;AAAA,IAC9B,wBAAwB,KAAK;AAAA,IAC7B;AAAA,EACF;AACA,QAAM,CAAC,WAAW,YAAY,IAAI;AAAA,IAChC,wBAAwB,KAAK;AAAA,IAC7B;AAAA,EACF;AAGA,QAAM,CAAC,SAAS,IAAI;AAAA,IAClB,wBAAwB,KAAK;AAAA,IAC7B;AAAA,EACF;AACA,QAAM,CAAC,SAAS,gBAAgB,IAAI,eAA0B,IAAI,MAAS;AAG3E,QAAM,SAAS,OAAyB,IAAI;AAG5C,QAAM,CAAC,cAAc,eAAe,IAAI,SAAS,CAAC;AAGlD,YAAU,MAAM;AACd,QAAI,SAAS;AACX,sBAAgB,CAAC,SAAS,OAAO,CAAC;AAAA,IACpC;AAAA,EACF,GAAG,CAAC,OAAO,CAAC;AAGZ,QAAM,kBAAkB,MAAM;AAC5B,QAAI,OAAO,SAAS;AAClB,YAAM,QAAQ,OAAO,QAAQ;AAC7B,YAAM,SAAS,OAAO,QAAQ;AAC9B,cAAQ,IAAI,yBAAyB,OAAO,WAAW,MAAM;AAC7D,kBAAY,KAAK;AACjB,mBAAa,MAAM;AAAA,IACrB;AAAA,EACF;AAGA,YAAU,MAAM;AACd,YAAQ,IAAI,0BAA0B;AACtC,UAAM,MAAM,OAAO;AACnB,QAAI,CAAC,IAAK;AAGV,QAAI,iBAAiB,QAAQ,eAAe;AAG5C,UAAM,wBAAwB,SAAS,MAAM;AAC3C,UAAI,OAAO,IAAI,UAAU;AACvB,wBAAgB;AAAA,MAClB;AAAA,IACF,GAAG,GAAG;AAGN,UAAM,iBAAiB,IAAI,eAAe,CAAC,YAAY;AACrD,iBAAW,SAAS,SAAS;AAC3B,YAAI,MAAM,WAAW,KAAK;AACxB,gCAAsB;AAAA,QACxB;AAAA,MACF;AAAA,IACF,CAAC;AAED,mBAAe,QAAQ,GAAG;AAE1B,WAAO,MAAM;AACX,UAAI,oBAAoB,QAAQ,eAAe;AAC/C,qBAAe,WAAW;AAAA,IAC5B;AAAA,EACF,GAAG,CAAC,QAAQ,cAAc,aAAa,YAAY,CAAC;AAEpD,SACE;AAAA,IAAC;AAAA;AAAA,MACC,KAAK;AAAA,MACL,KAAK,SAAS;AAAA,MACd,KAAI;AAAA,MACJ;AAAA,MACA,OAAO;AAAA,QACL,OAAO;AAAA,QACP,QAAQ;AAAA,QACR,SAAS,YAAY,SAAS;AAAA,QAC9B,SAAS,mBAAmB,MAAM;AAAA,MACpC;AAAA,MACA,QAAQ;AAAA;AAAA,EACV;AAEJ;",
  "names": []
}
